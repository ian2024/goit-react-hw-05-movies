{"version":3,"file":"static/js/603.79be3d85.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","defaultImages/defaultImages.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 28px;`\n\nexport const Backdrop = styled.img`\nwidth: 1280px;\nheight: 414px;\nopacity: 12%;\nposition: relative;`\n\nexport const Title = styled.h2`\ncolor: white;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-size: 32px;\nfont-weight: 700;`\n\nexport const Text = styled.p`\ncolor: white;`\n\nexport const Subtitle = styled.h3`\ncolor: white;\nfont-weight: 480;\nfont-size: 24px;\ncolor: rgb(5,101,178);\ntext-align: center;`\n\nexport const Image = styled.img`\nposition: absolute;\nleft: 0;`\n\nexport const Comp = styled.ul`\ndisplay: flex;\njustify-content: center;\ngap: 32px;\nmargin-top: 15px;\nmargin-bottom: 22px;`\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: center;`\n\nexport const ImageComp = styled.img`\ndisplay: flex;`\n\n\nexport const Block = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\npadding-bottom: 8px;\nmargin-top: 15px;\ngap: 15px;`","import styled from 'styled-components';\n\n\nexport const Item = styled.li`\ndisplay: flex;\nwidth: 180px;\nheight: 320px;\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25), 0 7px 10px rgba(0, 0, 0, 0.15);\n  }`\n\n  export const Image = styled.img`\n  border-radius: 5px;`\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: #ffffff;\n  padding-top: 10px;\n  text-decoration: none;`","import { DEF_IMG, DEF_PATH } from 'defaultImages/defaultImages';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { Image, Item, Text } from './MoviesItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n    const location = useLocation();\n    const { id, poster_path, title } = movie;\n    return (\n        <>\n            <Item>\n                <NavLink to={`/movies/${id}`} state={{from: location}}>\n                    <Image src={poster_path ? DEF_PATH + poster_path : DEF_IMG} width='100%' alt={title} />\n                    <Text>{title}</Text>\n                </NavLink>\n            </Item>\n        </>\n    );\n};\n\nMovieItem.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n    }),\n};\n\nexport default MovieItem;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n`\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\ngap: 15px;\n`","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MoviesItem/MoviesItem';\nimport { Container } from 'components/MovieCard/MovieCard.styled';\nimport { List } from './MoviesList.styled';\n\n\nconst MoviesList = ({ movies }) => {\n    return (\n        <Container>\n            <List>\n                {movies.map(movie => (\n                    <MovieItem movie={movie} key={movie.id} />\n                ))}\n            </List>\n        </Container>\n    );\n};\n\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired\n        })\n    ),\n};\n\nexport default MoviesList;","export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG = 'https://en-images.kinorium.com/movie/1080/1662246.jpg?1556722314';\nexport const BACK_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const COMP_PATH = 'https://image.tmdb.org/t/p/original';","import styled from \"styled-components\";\n\nexport const FormIn = styled.form`\n  `\n\nexport const Button = styled.button`\nwidth: 84px;\nheight: 30px;\nmargin-left: 10px;\nbackground-color: #000000;\ncolor: white;\nborder-radius: 15%;\n`\n\nexport const Input = styled.input`\nwidth: 240px;\nheight: 30px;\nmargin-left: 25px;\nborder-radius: 4%;\nborder: none;\n&::placeholder {\n    padding-left: 10px;\n}\n`","import { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport PropTypes from \"prop-types\";\nimport { Button, FormIn, Input } from \"./Searchbar.styled\";\n\n\nfunction Searchbar({ getSearchQuery }) {\n    const [input, setInput] = useState('');\n\n    const handleInput = e => {\n        setInput(e.target.value.toLowerCase());\n        \n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        input.trim === '' ? toast.error('Please enter a new word') : getSearchQuery(input);\n        setInput('');\n    };\n\n    return (\n        <div>\n            <FormIn onSubmit={handleSubmit}>\n                <Input\n                    name='input'\n                    value={input}\n                    type=\"text\"\n                    onChange={handleInput}\n                    placeholder=\"Find Film\"\n                />\n            <Button type=\"submit\">Search</Button>\n            </FormIn> \n        </div>\n    )\n};\n\nSearchbar.propTypes = {\n    getSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 40px;\n`","import Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { fetchSource } from \"services/api\";\nimport { Container } from \"./Movies.styled\";\n\n\n\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieNames = searchParams.get('query') ?? '';\n\n    const newQuery = query => {\n        const newParams = query !== '' ? { query } : {};\n        setSearchParams(newParams);\n    };\n\n\n    useEffect(() => {\n        if (movieNames === '') {\n            return;\n        }\n        async function getMovies() {\n            try {\n                setStatus('pending');\n                const r = await fetchSource(movieNames);\n                setMovies(r);\n                setStatus('resolved');\n            } catch (error) {\n                setStatus('rejected');\n                toast(error.message);\n            }\n        }\n        getMovies();\n    }, [movieNames]);\n\n\n\n    const handleSearch = input => {\n       \n        newQuery(input.trim());\n    }\n\n    return (\n        <div>\n            <Searchbar getSearchQuery={handleSearch} />\n            \n            <Container>\n                {movies.length > 0 && <MoviesList movies={movies} />}\n            </Container>\n            {status === 'pending' && <Loader/>}\n        </div>\n    )\n}\n\nexport default Movies;","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5dbd3e6c7997b0fe2a7670533341673';\n\n\nexport const fetchFilms = async () => {\n    try {\n       const r = await Axios.get(`trending/movie/week?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchSource = async query => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query,\n    });\n    try {\n        const r = await Axios.get(`search/movie?${params}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n        return r.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n        return r.data.cast;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchReviews = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};"],"names":["Container","styled","Backdrop","Title","Text","Subtitle","Image","Comp","Item","ImageComp","Block","MovieItem","movie","location","useLocation","id","poster_path","title","to","state","from","src","DEF_PATH","DEF_IMG","width","alt","List","movies","map","BACK_PATH","COMP_PATH","FormIn","Button","Input","getSearchQuery","useState","input","setInput","onSubmit","e","preventDefault","trim","toast","name","value","type","onChange","target","toLowerCase","placeholder","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","movieNames","get","useEffect","fetchSource","r","message","getMovies","query","length","MoviesList","Loader","Axios","API_KEY","fetchFilms","data","results","params","URLSearchParams","api_key","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchReviews"],"sourceRoot":""}