{"version":3,"file":"static/js/779.9b5cb52a.chunk.js","mappings":"uRAGaA,EAAOC,EAAAA,GAAAA,GAAH,yFAMJC,EAAOD,EAAAA,GAAAA,GAAH,oKASJE,EAAQF,EAAAA,GAAAA,EAAH,6F,SCwBlB,EApCgB,WACZ,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAEwBC,EAAAA,EAAAA,IAAaN,GAFrC,OAEcO,EAFd,OAGQH,EAAWG,GAHnB,gDAKQC,EAAAA,GAAAA,MAAY,KAAMC,SAL1B,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACV,KAGA,8BACY,OAAPG,QAAO,IAAPA,GAAAA,EAASQ,QACN,SAACf,EAAD,iBACKO,QADL,IACKA,OADL,EACKA,EAASS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACI,UAACjB,EAAD,YACI,UAACC,EAAD,sBAAgBe,MAChB,uBAAIC,MAFGF,EAKlB,OAGL,sDAIf,C,8LCtCDG,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAU,mCAAG,6GAEHF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFtC,cAEbV,EAFa,yBAGXA,EAAEY,KAAKC,SAHI,oGAAH,qDAUVC,EAAW,mCAAG,WAAMC,GAAN,gFACjBC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASR,EACTK,MAAAA,IAHmB,kBAMHN,EAAAA,GAAAA,IAAA,uBAA0BO,IANvB,cAMbhB,EANa,yBAOZA,EAAEY,KAAKC,SAPK,oGAAH,sDAcXM,EAAiB,mCAAG,WAAM1B,GAAN,gGAETgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,oBAAsCiB,IAF7B,cAEnBV,EAFmB,yBAGlBA,EAAEY,MAHgB,oGAAH,sDASjBQ,EAAc,mCAAG,WAAM3B,GAAN,gGAENgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,4BAA8CiB,IAFxC,cAEhBV,EAFgB,yBAGfA,EAAEY,KAAKS,MAHQ,oGAAH,sDAUdtB,EAAY,mCAAG,WAAMN,GAAN,gGAEJgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,4BAA8CiB,IAF1C,cAEdV,EAFc,yBAGbA,EAAEY,KAAKC,SAHM,oGAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 15px;\n`\n\nexport const Item = styled.li`\nwidth: 95vh;\nmargin-bottom: 20px;\ncolor: #ffffff;\nborder: 2px solid rgb(6%, 6%, 6%, 0.5);\npadding: 6px 5px 5px 5px;\nborder-radius: 5px;`\n\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n    padding-bottom: 10px;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { fetchReviews } from 'services/api';\nimport { Item, List, Title } from './Reviews.styled';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => { \n        async function getReviews() {\n            try {\n                const r = await fetchReviews(movieId);\n                setReviews(r);\n            } catch (error) {\n                toast.error(error.message)\n            }\n        }\n        getReviews();\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews?.length ? (\n                <List>\n                    {reviews?.map(({ id, author, content }) => {\n                        return (\n                            <Item key={id}>\n                                <Title>Author: {author}</Title>\n                                <p>{content}</p>\n                            </Item>\n                        );\n                    })}\n                </List>\n            ) : (\n                <p>We don't have any reviews</p>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5dbd3e6c7997b0fe2a7670533341673';\n\n\nexport const fetchFilms = async () => {\n    try {\n       const r = await Axios.get(`trending/movie/week?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchSource = async query => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query,\n    });\n    try {\n        const r = await Axios.get(`search/movie?${params}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n        return r.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n        return r.data.cast;\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const fetchReviews = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        throw error;\n    }\n};"],"names":["List","styled","Item","Title","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","r","toast","message","getReviews","length","map","id","author","content","Axios","API_KEY","fetchFilms","data","results","fetchSource","query","params","URLSearchParams","api_key","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}